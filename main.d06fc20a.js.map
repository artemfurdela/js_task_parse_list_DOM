{"version":3,"sources":["scripts/main.js"],"names":["initialList","document","querySelectorAll","sortList","list","sortedList","sort","person1","person2","toNumber","querySelector","append","numStr","Number","dataset","salary","replace","getEmployees","map","person","employeeObj","Employee","name","innerText","position","age"],"mappings":";AAAA,aAiCA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/BA,IAAMA,EAAkBC,EAAAA,SAASC,iBAAiB,OAE5CC,EAAW,SAACC,GAAS,IAAA,EACnBC,EAAaD,EAAKE,KAAK,SAACC,EAASC,GACrCC,OAAAA,EAASD,GAAWC,EAASF,MAE/BN,EAAAA,SAASS,cAAc,OAAMC,OAAUN,MAAAA,EAAAA,EAAAA,KAGnCI,EAAW,SAACG,GACTC,OAAAA,OAAOD,EAAOE,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,MAG9DC,EAAe,SAACb,GACbA,OAAAA,EAAKc,IAAI,SAAAC,GAGPC,OAFa,IAAIC,EAASF,MAM/BE,EACJ,SAAYF,EAAAA,GAAQ,EAAA,KAAA,GACbG,KAAAA,KAAOH,EAAOI,UACdC,KAAAA,SAAWL,EAAOL,QAAQU,SAC1BT,KAAAA,OAASI,EAAOL,QAAQC,OACxBU,KAAAA,IAAMN,EAAOL,QAAQW,KAI9BtB,EAASH,GACTiB,EAAajB","file":"main.d06fc20a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst initialList = [...document.querySelectorAll('li')];\n\nconst sortList = (list) => {\n  const sortedList = list.sort((person1, person2) =>\n    toNumber(person2) - toNumber(person1));\n\n  document.querySelector('ul').append(...sortedList);\n};\n\nconst toNumber = (numStr) => {\n  return Number(numStr.dataset.salary.replace('$', '').replace(',', ''));\n};\n\nconst getEmployees = (list) => {\n  return list.map(person => {\n    const employeeObj = new Employee(person);\n\n    return employeeObj;\n  });\n};\n\nclass Employee {\n  constructor(person) {\n    this.name = person.innerText;\n    this.position = person.dataset.position;\n    this.salary = person.dataset.salary;\n    this.age = person.dataset.age;\n  }\n}\n\nsortList(initialList);\ngetEmployees(initialList);\n"]}